declare module 'react-elasticsearch' {
  /** Declaration file generated by dts-gen */

  export const ActiveFilters: React.FunctionComponent<{
    items?: any
  }>

  export const CustomWidget: React.FunctionComponent<{
    children?: React.ReactNode,
  }>;

  export const Elasticsearch: React.FunctionComponent<{
    children?: React.ReactNode,
    url?: string,
    onChange?: any,
    headers?: any
  }>;

  export const Facet: React.FunctionComponent<{
    fields?: string[],
    id?: string,
    initialValue?: any,
    seeMore?: any,
    placeholder?: any,
    showFilter?: any,
    filterValueModifier?: any,
    itemsPerBlock?: any,
    items?: any
  }>;

  export const Listener: React.FunctionComponent<{
    children?: React.ReactNode,
    onChange?: any,
  }>;

  export const Pagination: React.FunctionComponent<{
    onChange?: any,
    total?: any,
    itemsPerPage?: any,
    page?: any,
  }>;

  export const QueryBuilder: React.FunctionComponent<{
    fields?: string[],
    operators?: any,
    combinators?: any,
    templateRule?: any,
    initialValue?: any,
    id?: string,
    autoComplete?: any
  }>;

  export type ESDoc<T> = {
    "_index": string,
    "_type": string,
    "_id": string,
    "_score": number,
    "_source": T
  }
  
  export const Results: React.FunctionComponent<{
    itemsPerPage?: any,
    initialPage?: any,
    pagination?: any,
    stats?: any,
    items?: (item: ESDoc<unknown>[]) => React.ReactNode,
    id?: string,
    sort?: any,
  }>;

  export const SearchBox: React.FunctionComponent<{
    customQuery?: any,
    fields?: string[],
    id?: string,
    initialValue?: any,
    placeholder?: any
  }>;

  export function fromUrlQueryString(t: string): Map;

  export function msearch(t: {
    url?: any,
    msearchData?: any,
    headers?: any
  }, e: any, ...args: any[]): any;

  export function toUrlQueryString(t: Map): string;


}
